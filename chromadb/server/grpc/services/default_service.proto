/*
  ChromaDB API

  This is OpenAPI schema for ChromaDB API.

  The version of the OpenAPI document: 1.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";
//option python_package = "chromadb.server.grpc.services";
package openapitools.services.defaultservice;

import "google/protobuf/empty.proto";
//import public "models/add_embedding.proto";
//import public "models/collection.proto";
//import public "models/create_collection.proto";
//import public "models/delete_embedding.proto";
//import public "models/get_embedding.proto";
//import public "models/get_result.proto";
//import public "models/http_validation_error.proto";
//import public "models/query_embedding.proto";
//import public "models/query_result.proto";
//import public "models/update_collection.proto";
//import public "models/update_embedding.proto";

service DefaultService {
//  rpc Add (AddRequest) returns (AddResponse);

//  rpc Count (CountRequest) returns (CountResponse);

  rpc CreateCollection (CreateCollectionRequest) returns (Collection);

//  rpc Delete (DeleteRequest) returns (DeleteResponse);
//
//  rpc DeleteCollection (DeleteCollectionRequest) returns (Collection);
//
//  rpc Get (GetRequest) returns (GetResult);
//
//  rpc GetCollection (GetCollectionRequest) returns (Collection);
//
//  rpc GetNearestNeighbors (GetNearestNeighborsRequest) returns (QueryResult);

  rpc Heartbeat (google.protobuf.Empty) returns (HeartbeatResponse);

//  rpc ListCollections (google.protobuf.Empty) returns (ListCollectionsResponse);

  rpc Reset (google.protobuf.Empty) returns (ResetResponse);

  rpc Root (google.protobuf.Empty) returns (RootResponse);

//  rpc Update (UpdateRequest) returns (UpdateResponse);

//  rpc UpdateCollection (UpdateCollectionRequest) returns (Collection);

//  rpc Upsert (UpsertRequest) returns (UpsertResponse);

  rpc Version (google.protobuf.Empty) returns (VersionResponse);

}

//message AddRequest {
//  string collectionId = 1;
//  AddEmbedding addEmbedding = 2;
//
//}

//message AddResponse {
//  bool data = 1;
//}

//message CountRequest {
//  string collectionId = 1;
//
//}
//
//message CountResponse {
//  int32 data = 1;
//}

message CreateCollectionRequest {
  CreateCollection createCollection = 1;

}
//
//message DeleteRequest {
//  string collectionId = 1;
//  DeleteEmbedding deleteEmbedding = 2;
//
//}
//
//message DeleteResponse {
//  repeated string data = 1;
//}
//
//message DeleteCollectionRequest {
//  string collectionName = 1;
//
//}
//
//message GetRequest {
//  string collectionId = 1;
//  GetEmbedding getEmbedding = 2;
//
//}
//
//message GetCollectionRequest {
//  string collectionName = 1;
//
//}
//
//message GetNearestNeighborsRequest {
//  string collectionId = 1;
//  QueryEmbedding queryEmbedding = 2;
//
//}

message HeartbeatResponse {
  float data = 1;
}

//message ListCollectionsResponse {
//  repeated Collection data = 1;
//}

message ResetResponse {
  bool data = 1;
}

message RootResponse {
  float data = 1;
}
//
//message UpdateRequest {
//  string collectionId = 1;
//  UpdateEmbedding updateEmbedding = 2;
//
//}
//
//message UpdateResponse {
//  bool data = 1;
//}
//
//message UpdateCollectionRequest {
//  string collectionId = 1;
//  UpdateCollection updateCollection = 2;
//
//}
//
//message UpsertRequest {
//  string collectionId = 1;
//  AddEmbedding addEmbedding = 2;
//
//}
//
//message UpsertResponse {
//  bool data = 1;
//}

message VersionResponse {
  string data = 1;
}



message CreateCollection {

  string name = 3373707;

  Metadata metadata = 450004177;

  bool get_or_create = 76050129;

}

message Collection {

  string name = 3373707;

  string id = 3355;

  Metadata metadata = 450004177;

}

message Metadata {
  repeated KeyValueArray items = 1;
}

message KeyValueArray {
  repeated KeyValue items = 1;
}

message KeyValue {
  string key = 1;
  Value value = 2;
}

message Value {
  oneof value_type {
    string str_value = 1;
    int32 int_value = 2;  // Assuming 32-bit integer.
    float float_value = 3;
    bool bool_value = 4;
  }
}



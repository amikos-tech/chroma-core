FROM python:3.10-slim-bullseye as builder

RUN apt-get update --fix-missing && apt-get install -y --fix-missing \
    build-essential \
    gcc \
    g++ && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir /install
WORKDIR /install

COPY ./requirements.txt requirements.txt

RUN pip install --no-cache-dir --upgrade --prefix="/install" -r requirements.txt

FROM python:3.10-slim-bullseye as final
#SQLite3 refs:
# - https://gist.github.com/cnruby/961689
# - https://www.sqlite.org/download.html

#TODO sqlite version can be made configurable

RUN apt-get update --fix-missing && apt-get install -y --fix-missing \
    build-essential \
    gcc \
    g++ \
    sqlite3 \
    libsqlite3-dev \
    wget && \
    awk '/^deb / && !seen[$0]++ {gsub(/^deb /, "deb-src "); print}' /etc/apt/sources.list | tee -a /etc/apt/sources.list && \
    apt-get update && \
    apt-get build-dep sqlite3 -y && \
    rm -rf /var/lib/apt/lists/* && \
    wget https://www.sqlite.org/2023/sqlite-autoconf-3420000.tar.gz && \
    tar vvvvvxzf sqli* && \
    cd sqlite-autoconf-3420000 && \
    ./configure && \
    make && make install && \
    cp /usr/local/lib/libsqlite3.* /usr/lib/aarch64-linux-gnu/ && \
    ldconfig && \
    rm -rf sqlite-autoconf-3420000


RUN mkdir /chroma
WORKDIR /chroma

COPY --from=builder /install /usr/local
COPY ./bin/docker_entrypoint.sh /docker_entrypoint.sh
COPY ./ /chroma

EXPOSE 8000

CMD ["/docker_entrypoint.sh"]

#Instructions for building the image:
# `docker build -t chroma:bullseye -f Dockerfile-bullseye .`
# then `docker run -it -e ALLOW_RESET=true -p 8000:8000 chroma:bullseye`